{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "Retention and eDiscovery for Google Workspace. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege. For example, to download an export, an account needs the **Manage Exports** privilege and the matter shared with them. ",
    "license": {
      "name": "Creative Commons Attribution 3.0",
      "url": "http://creativecommons.org/licenses/by/3.0/"
    },
    "termsOfService": "https://developers.google.com/terms/",
    "title": "G Suite Vault API",
    "version": "v1"
  },
  "host": "vault.googleapis.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/matters": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "The number of matters to return in the response. Default and maximum are 100.",
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          },
          {
            "description": "The pagination token as returned in the response.",
            "in": "query",
            "name": "pageToken",
            "type": "string"
          },
          {
            "description": "If set, lists only matters with the specified state. The default lists matters of all states.",
            "enum": [
              "STATE_UNSPECIFIED",
              "OPEN",
              "CLOSED",
              "DELETED"
            ],
            "in": "query",
            "name": "state",
            "type": "string"
          },
          {
            "description": "Specifies how much information about the matter to return in response.",
            "enum": [
              "VIEW_UNSPECIFIED",
              "BASIC",
              "FULL"
            ],
            "in": "query",
            "name": "view",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListMattersResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Lists matters the requestor has access to.",
        "operationId": "vault.matters.list"
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Matter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Matter"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Creates a matter with the given name and description. The initial state is open, and the owner is the method caller. Returns the created matter with default view.",
        "operationId": "vault.matters.create"
      }
    },
    "/v1/matters/{matterId}": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "delete": {
        "parameters": [
          {
            "description": "The matter ID",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Matter"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Deletes the specified matter. Returns the matter with updated state.",
        "operationId": "vault.matters.delete"
      },
      "get": {
        "parameters": [
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "Specifies how much information about the matter to return in the response.",
            "enum": [
              "VIEW_UNSPECIFIED",
              "BASIC",
              "FULL"
            ],
            "in": "query",
            "name": "view",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Matter"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Gets the specified matter.",
        "operationId": "vault.matters.get"
      },
      "put": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Matter"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Matter"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Updates the specified matter. This updates only the name and description of the matter, identified by matter ID. Changes to any other fields are ignored. Returns the default view of the matter.",
        "operationId": "vault.matters.update"
      }
    },
    "/v1/matters/{matterId}/exports": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of exports to return in the response.",
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          },
          {
            "description": "The pagination token as returned in the response.",
            "in": "query",
            "name": "pageToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListExportsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Lists details about the exports in the specified matter.",
        "operationId": "vault.matters.exports.list"
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Export"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Export"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Creates an export.",
        "operationId": "vault.matters.exports.create"
      }
    },
    "/v1/matters/{matterId}/exports/{exportId}": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "delete": {
        "parameters": [
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The export ID.",
            "in": "path",
            "name": "exportId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Deletes an export.",
        "operationId": "vault.matters.exports.delete"
      },
      "get": {
        "parameters": [
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The export ID.",
            "in": "path",
            "name": "exportId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Export"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Gets an export.",
        "operationId": "vault.matters.exports.get"
      }
    },
    "/v1/matters/{matterId}/holds": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The number of holds to return in the response, between 0 and 100 inclusive. Leaving this empty, or as 0, is the same as **page_size** = 100.",
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          },
          {
            "description": "The pagination token as returned in the response. An empty token means start from the beginning.",
            "in": "query",
            "name": "pageToken",
            "type": "string"
          },
          {
            "description": "The amount of detail to return for a hold.",
            "enum": [
              "HOLD_VIEW_UNSPECIFIED",
              "BASIC_HOLD",
              "FULL_HOLD"
            ],
            "in": "query",
            "name": "view",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListHoldsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Lists the holds in a matter.",
        "operationId": "vault.matters.holds.list"
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Hold"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Hold"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Creates a hold in the specified matter.",
        "operationId": "vault.matters.holds.create"
      }
    },
    "/v1/matters/{matterId}/holds/{holdId}": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "delete": {
        "parameters": [
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The hold ID.",
            "in": "path",
            "name": "holdId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Removes the specified hold and releases the accounts or organizational unit covered by the hold. If the data is not preserved by another hold or retention rule, it might be purged.",
        "operationId": "vault.matters.holds.delete"
      },
      "get": {
        "parameters": [
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The hold ID.",
            "in": "path",
            "name": "holdId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The amount of detail to return for a hold.",
            "enum": [
              "HOLD_VIEW_UNSPECIFIED",
              "BASIC_HOLD",
              "FULL_HOLD"
            ],
            "in": "query",
            "name": "view",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Hold"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Gets the specified hold.",
        "operationId": "vault.matters.holds.get"
      },
      "put": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Hold"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the hold.",
            "in": "path",
            "name": "holdId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Hold"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Updates the scope (organizational unit or accounts) and query parameters of a hold. You cannot add accounts to a hold that covers an organizational unit, nor can you add organizational units to a hold that covers individual accounts. If you try, the unsupported values are ignored.",
        "operationId": "vault.matters.holds.update"
      }
    },
    "/v1/matters/{matterId}/holds/{holdId}/accounts": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The hold ID.",
            "in": "path",
            "name": "holdId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListHeldAccountsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Lists the accounts covered by a hold. This can list only individually-specified accounts covered by the hold. If the hold covers an organizational unit, use the [Admin SDK](https://developers.google.com/admin-sdk/). to list the members of the organizational unit on hold.",
        "operationId": "vault.matters.holds.accounts.list"
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/HeldAccount"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The hold ID.",
            "in": "path",
            "name": "holdId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/HeldAccount"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Adds an account to a hold. Accounts can be added only to a hold that does not have an organizational unit set. If you try to add an account to an organizational unit-based hold, an error is returned.",
        "operationId": "vault.matters.holds.accounts.create"
      }
    },
    "/v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "delete": {
        "parameters": [
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The hold ID.",
            "in": "path",
            "name": "holdId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the account to remove from the hold.",
            "in": "path",
            "name": "accountId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Removes an account from a hold.",
        "operationId": "vault.matters.holds.accounts.delete"
      }
    },
    "/v1/matters/{matterId}/holds/{holdId}:addHeldAccounts": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AddHeldAccountsRequest"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The hold ID.",
            "in": "path",
            "name": "holdId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AddHeldAccountsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Adds accounts to a hold. Returns a list of accounts that have been successfully added. Accounts can be added only to an existing account-based hold.",
        "operationId": "vault.matters.holds.addHeldAccounts"
      }
    },
    "/v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RemoveHeldAccountsRequest"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The hold ID.",
            "in": "path",
            "name": "holdId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RemoveHeldAccountsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Removes the specified accounts from a hold. Returns a list of statuses in the same order as the request.",
        "operationId": "vault.matters.holds.removeHeldAccounts"
      }
    },
    "/v1/matters/{matterId}/savedQueries": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "The ID of the matter to get the saved queries for.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The maximum number of saved queries to return.",
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          },
          {
            "description": "The pagination token as returned in the previous response. An empty token means start from the beginning.",
            "in": "query",
            "name": "pageToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListSavedQueriesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Lists the saved queries in a matter.",
        "operationId": "vault.matters.savedQueries.list"
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SavedQuery"
            }
          },
          {
            "description": "The ID of the matter to create the saved query in.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SavedQuery"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Creates a saved query.",
        "operationId": "vault.matters.savedQueries.create"
      }
    },
    "/v1/matters/{matterId}/savedQueries/{savedQueryId}": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "delete": {
        "parameters": [
          {
            "description": "The ID of the matter to delete the saved query from.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the saved query to delete.",
            "in": "path",
            "name": "savedQueryId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Deletes the specified saved query.",
        "operationId": "vault.matters.savedQueries.delete"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the matter to get the saved query from.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          },
          {
            "description": "ID of the saved query to retrieve.",
            "in": "path",
            "name": "savedQueryId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SavedQuery"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Retrieves the specified saved query.",
        "operationId": "vault.matters.savedQueries.get"
      }
    },
    "/v1/matters/{matterId}:addPermissions": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AddMatterPermissionsRequest"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/MatterPermission"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Adds an account as a matter collaborator.",
        "operationId": "vault.matters.addPermissions"
      }
    },
    "/v1/matters/{matterId}:close": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CloseMatterRequest"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CloseMatterResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Closes the specified matter. Returns the matter with updated state.",
        "operationId": "vault.matters.close"
      }
    },
    "/v1/matters/{matterId}:count": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CountArtifactsRequest"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Counts the accounts processed by the specified query.",
        "operationId": "vault.matters.count"
      }
    },
    "/v1/matters/{matterId}:removePermissions": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RemoveMatterPermissionsRequest"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Removes an account as a matter collaborator.",
        "operationId": "vault.matters.removePermissions"
      }
    },
    "/v1/matters/{matterId}:reopen": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ReopenMatterRequest"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ReopenMatterResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Reopens the specified matter. Returns the matter with updated state.",
        "operationId": "vault.matters.reopen"
      }
    },
    "/v1/matters/{matterId}:undelete": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UndeleteMatterRequest"
            }
          },
          {
            "description": "The matter ID.",
            "in": "path",
            "name": "matterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Matter"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          }
        ],
        "tags": [
          "matters"
        ],
        "description": "Undeletes the specified matter. Returns the matter with updated state.",
        "operationId": "vault.matters.undelete"
      }
    },
    "/v1/{+name}": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "delete": {
        "parameters": [
          {
            "description": "The name of the operation resource to be deleted.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "operations"
        ],
        "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
        "operationId": "vault.operations.delete"
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the operation resource.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/ediscovery.readonly"
            ]
          }
        ],
        "tags": [
          "operations"
        ],
        "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
        "operationId": "vault.operations.get"
      }
    },
    "/v1/{+name}:cancel": {
      "parameters": [
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CancelOperationRequest"
            }
          },
          {
            "description": "The name of the operation resource to be cancelled.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "operations"
        ],
        "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
        "operationId": "vault.operations.cancel"
      }
    }
  },
  "definitions": {
    "AccountCount": {
      "description": "The results count for each account.",
      "properties": {
        "account": {
          "$ref": "#/definitions/UserInfo",
          "description": "Account owner."
        },
        "count": {
          "description": "The number of results (messages or files) found for this account.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountCountError": {
      "description": "An error that occurred when querying a specific account",
      "properties": {
        "account": {
          "$ref": "#/definitions/UserInfo",
          "description": "Account owner."
        },
        "errorType": {
          "description": "Account query error.",
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "WILDCARD_TOO_BROAD",
            "TOO_MANY_TERMS",
            "LOCATION_UNAVAILABLE",
            "UNKNOWN",
            "DEADLINE_EXCEEDED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountInfo": {
      "description": "The accounts to search",
      "properties": {
        "emails": {
          "description": "A set of accounts to search.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AddHeldAccountResult": {
      "description": "The status of each account creation, and the **HeldAccount**, if successful.",
      "properties": {
        "account": {
          "$ref": "#/definitions/HeldAccount",
          "description": "Returned when the account was successfully created."
        },
        "status": {
          "$ref": "#/definitions/Status",
          "description": "Reports the request status. If it failed, returns an error message."
        }
      },
      "type": "object"
    },
    "AddHeldAccountsRequest": {
      "description": "Add a list of accounts to a hold.",
      "properties": {
        "accountIds": {
          "description": "A comma-separated list of the account IDs of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "emails": {
          "description": "A comma-separated list of the emails of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AddHeldAccountsResponse": {
      "description": "Response for batch create held accounts.",
      "properties": {
        "responses": {
          "description": "The list of responses, in the same order as the batch request.",
          "items": {
            "$ref": "#/definitions/AddHeldAccountResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AddMatterPermissionsRequest": {
      "description": "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, the existing role is overwritten.",
      "properties": {
        "ccMe": {
          "description": "Only relevant if **sendEmails** is **true**. To CC the requestor in the email message, set to **true**. To not CC requestor, set to **false**.",
          "type": "boolean"
        },
        "matterPermission": {
          "$ref": "#/definitions/MatterPermission",
          "description": "The account and its role to add."
        },
        "sendEmails": {
          "description": "To send a notification email to the added account, set to **true**. To not send a notification email, set to **false**.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "type": "object"
    },
    "CloseMatterRequest": {
      "description": "Close a matter by ID.",
      "properties": {},
      "type": "object"
    },
    "CloseMatterResponse": {
      "description": "Response to a CloseMatterRequest.",
      "properties": {
        "matter": {
          "$ref": "#/definitions/Matter",
          "description": "The updated matter, with state **CLOSED**."
        }
      },
      "type": "object"
    },
    "CloudStorageFile": {
      "description": "The export file in Cloud Storage",
      "properties": {
        "bucketName": {
          "description": "The name of the Cloud Storage bucket for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis), but not to list the bucket contents. Instead, you can [get individual export files](https://cloud.google.com/storage/docs/json_api/v1/objects/get) by object name.",
          "type": "string"
        },
        "md5Hash": {
          "description": "The md5 hash of the file.",
          "type": "string"
        },
        "objectName": {
          "description": "The name of the Cloud Storage object for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis).",
          "type": "string"
        },
        "size": {
          "description": "The export file size.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudStorageSink": {
      "description": "Export sink for Cloud Storage files.",
      "properties": {
        "files": {
          "description": "Output only. The exported files in Cloud Storage.",
          "items": {
            "$ref": "#/definitions/CloudStorageFile"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CorpusQuery": {
      "description": "Service-specific options for holds.",
      "properties": {
        "driveQuery": {
          "$ref": "#/definitions/HeldDriveQuery",
          "description": "Service-specific options for Drive holds. If set, **CorpusType** must be **DRIVE**."
        },
        "groupsQuery": {
          "$ref": "#/definitions/HeldGroupsQuery",
          "description": "Service-specific options for Groups holds. If set, **CorpusType** must be **GROUPS**."
        },
        "hangoutsChatQuery": {
          "$ref": "#/definitions/HeldHangoutsChatQuery",
          "description": "Service-specific options for Chat holds. If set, **CorpusType** must be **HANGOUTS_CHAT**."
        },
        "mailQuery": {
          "$ref": "#/definitions/HeldMailQuery",
          "description": "Service-specific options for Gmail holds. If set, **CorpusType** must be **MAIL**."
        },
        "voiceQuery": {
          "$ref": "#/definitions/HeldVoiceQuery",
          "description": "Service-specific options for Voice holds. If set, **CorpusType** must be **VOICE**."
        }
      },
      "type": "object"
    },
    "CountArtifactsMetadata": {
      "description": "Long running operation metadata for CountArtifacts.",
      "properties": {
        "endTime": {
          "description": "End time of count operation. Available when operation is done.",
          "format": "google-datetime",
          "type": "string"
        },
        "matterId": {
          "description": "The matter ID of the associated matter.",
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query",
          "description": "The search query from the request."
        },
        "startTime": {
          "description": "Creation time of count operation.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CountArtifactsRequest": {
      "description": "Count artifacts request.",
      "properties": {
        "query": {
          "$ref": "#/definitions/Query",
          "description": "The search query."
        },
        "view": {
          "description": "Sets the granularity of the count results.",
          "enum": [
            "COUNT_RESULT_VIEW_UNSPECIFIED",
            "TOTAL_COUNT",
            "ALL"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CountArtifactsResponse": {
      "description": "Definition of the response for method CountArtifacts.",
      "properties": {
        "groupsCountResult": {
          "$ref": "#/definitions/GroupsCountResult",
          "description": "Count metrics for Groups."
        },
        "mailCountResult": {
          "$ref": "#/definitions/MailCountResult",
          "description": "Count metrics for Gmail and classic Hangouts."
        },
        "totalCount": {
          "description": "Total count of messages.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DriveExportOptions": {
      "description": "Options for Drive exports.",
      "properties": {
        "includeAccessInfo": {
          "description": "To include access level information for users with [indirect access](https://support.google.com/vault/answer/6099459#metadata) to files, set to **true**.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DriveOptions": {
      "description": "Additional options for Drive search",
      "properties": {
        "includeSharedDrives": {
          "description": "Set to **true** to include shared drives.",
          "type": "boolean"
        },
        "includeTeamDrives": {
          "description": "Set to true to include Team Drive.",
          "type": "boolean"
        },
        "versionDate": {
          "description": "Search the current version of the Drive file, but export the contents of the last version saved before 12:00 AM UTC on the specified date. Enter the date in UTC.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object"
    },
    "Export": {
      "description": "An export. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "properties": {
        "cloudStorageSink": {
          "$ref": "#/definitions/CloudStorageSink",
          "description": "Output only. The sink for export files in Cloud Storage."
        },
        "createTime": {
          "description": "Output only. The time when the export was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "exportOptions": {
          "$ref": "#/definitions/ExportOptions",
          "description": "Additional export options."
        },
        "id": {
          "description": "Output only. The generated export ID.",
          "type": "string"
        },
        "matterId": {
          "description": "Output only. The matter ID.",
          "type": "string"
        },
        "name": {
          "description": "The export name.",
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query",
          "description": "The query parameters used to create the export."
        },
        "requester": {
          "$ref": "#/definitions/UserInfo",
          "description": "Output only. The requester of the export."
        },
        "stats": {
          "$ref": "#/definitions/ExportStats",
          "description": "Output only. Details about the export progress and size."
        },
        "status": {
          "description": "Output only. The status of the export.",
          "enum": [
            "EXPORT_STATUS_UNSPECIFIED",
            "COMPLETED",
            "FAILED",
            "IN_PROGRESS"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExportOptions": {
      "description": "Additional options for exports",
      "properties": {
        "driveOptions": {
          "$ref": "#/definitions/DriveExportOptions",
          "description": "Options for Drive exports."
        },
        "groupsOptions": {
          "$ref": "#/definitions/GroupsExportOptions",
          "description": "Options for Groups exports."
        },
        "hangoutsChatOptions": {
          "$ref": "#/definitions/HangoutsChatExportOptions",
          "description": "Options for Chat exports."
        },
        "mailOptions": {
          "$ref": "#/definitions/MailExportOptions",
          "description": "Options for Gmail exports."
        },
        "region": {
          "description": "The requested data region for the export.",
          "enum": [
            "EXPORT_REGION_UNSPECIFIED",
            "ANY",
            "US",
            "EUROPE"
          ],
          "type": "string"
        },
        "voiceOptions": {
          "$ref": "#/definitions/VoiceExportOptions",
          "description": "Options for Voice exports."
        }
      },
      "type": "object"
    },
    "ExportStats": {
      "description": "Progress information for an export.",
      "properties": {
        "exportedArtifactCount": {
          "description": "The number of messages or files already processed for export.",
          "format": "int64",
          "type": "string"
        },
        "sizeInBytes": {
          "description": "The size of export in bytes.",
          "format": "int64",
          "type": "string"
        },
        "totalArtifactCount": {
          "description": "The number of messages or files to be exported.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GroupsCountResult": {
      "description": "Groups specific count metrics.",
      "properties": {
        "accountCountErrors": {
          "description": "Error occurred when querying these accounts.",
          "items": {
            "$ref": "#/definitions/AccountCountError"
          },
          "type": "array"
        },
        "accountCounts": {
          "description": "Subtotal count per matching account that have more than zero messages.",
          "items": {
            "$ref": "#/definitions/AccountCount"
          },
          "type": "array"
        },
        "matchingAccountsCount": {
          "description": "Total number of accounts that can be queried and have more than zero messages.",
          "format": "int64",
          "type": "string"
        },
        "nonQueryableAccounts": {
          "description": "When **DataScope** is **HELD_DATA**, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "queriedAccountsCount": {
          "description": "Total number of accounts involved in this count operation.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GroupsExportOptions": {
      "description": "Options for Groups exports.",
      "properties": {
        "exportFormat": {
          "description": "The file format for exported messages.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "HangoutsChatExportOptions": {
      "description": "Options for Chat exports.",
      "properties": {
        "exportFormat": {
          "description": "The file format for exported messages.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "HangoutsChatInfo": {
      "description": "The Chat spaces to search",
      "properties": {
        "roomId": {
          "description": "A list of Chat spaces IDs, as provided by the [Chat API](https://developers.google.com/hangouts/chat).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "HangoutsChatOptions": {
      "description": "Additional options for Google Chat search",
      "properties": {
        "includeRooms": {
          "description": "For searches by account or organizational unit, set to **true** to include rooms.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "HeldAccount": {
      "description": "An account covered by a hold. This structure is immutable. It can be an individual account or a Google Group, depending on the service. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "properties": {
        "accountId": {
          "description": "The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).",
          "type": "string"
        },
        "email": {
          "description": "The primary email address of the account. If used as an input, this takes precedence over **accountId**.",
          "type": "string"
        },
        "firstName": {
          "description": "Output only. The first name of the account holder.",
          "type": "string"
        },
        "holdTime": {
          "description": "Output only. When the account was put on hold.",
          "format": "google-datetime",
          "type": "string"
        },
        "lastName": {
          "description": "Output only. The last name of the account holder.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HeldDriveQuery": {
      "description": "Options for Drive holds.",
      "properties": {
        "includeSharedDriveFiles": {
          "description": "To include files in shared drives in the hold, set to **true**.",
          "type": "boolean"
        },
        "includeTeamDriveFiles": {
          "description": "To include files in Team Drives in the hold, set to **true**.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "HeldGroupsQuery": {
      "description": "Query options for group holds.",
      "properties": {
        "endTime": {
          "description": "The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "format": "google-datetime",
          "type": "string"
        },
        "terms": {
          "description": "The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HeldHangoutsChatQuery": {
      "description": "Options for Chat holds.",
      "properties": {
        "includeRooms": {
          "description": "To include messages in Chat spaces the user was a member of, set to **true**.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "HeldMailQuery": {
      "description": "Query options for Gmail holds.",
      "properties": {
        "endTime": {
          "description": "The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "description": "The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "format": "google-datetime",
          "type": "string"
        },
        "terms": {
          "description": "The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HeldOrgUnit": {
      "description": "The organizational unit covered by a hold. This structure is immutable.",
      "properties": {
        "holdTime": {
          "description": "When the organizational unit was put on hold. This property is immutable.",
          "format": "google-datetime",
          "type": "string"
        },
        "orgUnitId": {
          "description": "The organizational unit's immutable ID as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HeldVoiceQuery": {
      "description": "Options for Voice holds.",
      "properties": {
        "coveredData": {
          "description": "A list of data types covered by the hold. Should be non-empty. Order does not matter and duplicates are ignored.",
          "items": {
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Hold": {
      "description": "A hold. A hold prevents the specified Google Workspace service from purging data for specific accounts or all members of an organizational unit. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "properties": {
        "accounts": {
          "description": "If set, the hold applies to the specified accounts and **orgUnit** must be empty.",
          "items": {
            "$ref": "#/definitions/HeldAccount"
          },
          "type": "array"
        },
        "corpus": {
          "description": "The service to be searched.",
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ],
          "type": "string"
        },
        "holdId": {
          "description": "The unique immutable ID of the hold. Assigned during creation.",
          "type": "string"
        },
        "name": {
          "description": "The name of the hold.",
          "type": "string"
        },
        "orgUnit": {
          "$ref": "#/definitions/HeldOrgUnit",
          "description": "If set, the hold applies to all members of the organizational unit and **accounts** must be empty. This property is mutable. For Groups holds, set **accounts**."
        },
        "query": {
          "$ref": "#/definitions/CorpusQuery",
          "description": "Service-specific options. If set, **CorpusQuery** must match **CorpusType**."
        },
        "updateTime": {
          "description": "The last time this hold was modified.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListExportsResponse": {
      "description": "The exports for a matter.",
      "properties": {
        "exports": {
          "description": "The list of exports.",
          "items": {
            "$ref": "#/definitions/Export"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListHeldAccountsResponse": {
      "description": "Returns a list of the accounts covered by a hold.",
      "properties": {
        "accounts": {
          "description": "The held accounts on a hold.",
          "items": {
            "$ref": "#/definitions/HeldAccount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListHoldsResponse": {
      "description": "The holds for a matter.",
      "properties": {
        "holds": {
          "description": "The list of holds.",
          "items": {
            "$ref": "#/definitions/Hold"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListMattersResponse": {
      "description": "Provides the list of matters.",
      "properties": {
        "matters": {
          "description": "List of matters.",
          "items": {
            "$ref": "#/definitions/Matter"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListSavedQueriesResponse": {
      "description": "Definition of the response for method ListSaveQuery.",
      "properties": {
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list.",
          "type": "string"
        },
        "savedQueries": {
          "description": "List of saved queries.",
          "items": {
            "$ref": "#/definitions/SavedQuery"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MailCountResult": {
      "description": "Gmail and classic Hangouts-specific count metrics.",
      "properties": {
        "accountCountErrors": {
          "description": "Errors occurred when querying these accounts.",
          "items": {
            "$ref": "#/definitions/AccountCountError"
          },
          "type": "array"
        },
        "accountCounts": {
          "description": "Subtotal count per matching account that have more than zero messages.",
          "items": {
            "$ref": "#/definitions/AccountCount"
          },
          "type": "array"
        },
        "matchingAccountsCount": {
          "description": "Total number of accounts that can be queried and have more than zero messages.",
          "format": "int64",
          "type": "string"
        },
        "nonQueryableAccounts": {
          "description": "When **DataScope** is **HELD_DATA**, the number of accounts in the request that are not queried because they are not on hold. For other data scopes, this field is not set.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "queriedAccountsCount": {
          "description": "Total number of accounts involved in this count operation.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MailExportOptions": {
      "description": "Options for Gmail exports.",
      "properties": {
        "exportFormat": {
          "description": "The file format for exported messages.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string"
        },
        "showConfidentialModeContent": {
          "description": "To export confidential mode content, set to **true**.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MailOptions": {
      "description": "Additional options for Gmail search",
      "properties": {
        "excludeDrafts": {
          "description": "Set to **true** to exclude drafts.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Matter": {
      "description": "Represents a matter. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "properties": {
        "description": {
          "description": "An optional description for the matter.",
          "type": "string"
        },
        "matterId": {
          "description": "The matter ID, which is generated by the server. Leave blank when creating a matter.",
          "type": "string"
        },
        "matterPermissions": {
          "description": "Lists the users and their permission for the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.",
          "items": {
            "$ref": "#/definitions/MatterPermission"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the matter.",
          "type": "string"
        },
        "state": {
          "description": "The state of the matter.",
          "enum": [
            "STATE_UNSPECIFIED",
            "OPEN",
            "CLOSED",
            "DELETED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MatterPermission": {
      "description": "Users can be matter owners or collaborators. Each matter has only one owner. All others users who can access the matter are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist.",
      "properties": {
        "accountId": {
          "description": "The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).",
          "type": "string"
        },
        "role": {
          "description": "The user's role for the matter.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "COLLABORATOR",
            "OWNER"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "$ref": "#/definitions/Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrgUnitInfo": {
      "description": "The organizational unit to search",
      "properties": {
        "orgUnitId": {
          "description": "The name of the organizational unit to search, as provided by the [Admin SDK Directory API](https://developers.google.com/admin-sdk/directory/).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Query": {
      "description": "The query definition used for search and export.",
      "properties": {
        "accountInfo": {
          "$ref": "#/definitions/AccountInfo",
          "description": "Required when **SearchMethod** is **ACCOUNT**."
        },
        "corpus": {
          "description": "The Google Workspace service to search.",
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ],
          "type": "string"
        },
        "dataScope": {
          "description": "The data source to search.",
          "enum": [
            "DATA_SCOPE_UNSPECIFIED",
            "ALL_DATA",
            "HELD_DATA",
            "UNPROCESSED_DATA"
          ],
          "type": "string"
        },
        "driveOptions": {
          "$ref": "#/definitions/DriveOptions",
          "description": "Set Drive search-specific options."
        },
        "endTime": {
          "description": "The end time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "format": "google-datetime",
          "type": "string"
        },
        "hangoutsChatInfo": {
          "$ref": "#/definitions/HangoutsChatInfo",
          "description": "Required when **SearchMethod** is **ROOM**. (read-only)"
        },
        "hangoutsChatOptions": {
          "$ref": "#/definitions/HangoutsChatOptions",
          "description": "Set Chat search-specific options. (read-only)"
        },
        "mailOptions": {
          "$ref": "#/definitions/MailOptions",
          "description": "Set Gmail search-specific options."
        },
        "method": {
          "description": "The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**.",
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "type": "string"
        },
        "orgUnitInfo": {
          "$ref": "#/definitions/OrgUnitInfo",
          "description": "Required when **SearchMethod** is **ORG_UNIT**."
        },
        "searchMethod": {
          "description": "The search method to use.",
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "type": "string"
        },
        "sharedDriveInfo": {
          "$ref": "#/definitions/SharedDriveInfo",
          "description": "Required when **SearchMethod** is **SHARED_DRIVE**."
        },
        "startTime": {
          "description": "The start time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.",
          "format": "google-datetime",
          "type": "string"
        },
        "teamDriveInfo": {
          "$ref": "#/definitions/TeamDriveInfo",
          "description": "Required when **SearchMethod** is **TEAM_DRIVE**."
        },
        "terms": {
          "description": "Service-specific [search operators](https://support.google.com/vault/answer/2474474) to filter search results.",
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For a list of time zone names, see [Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For more information about how Vault uses time zones, see [the Vault help center](https://support.google.com/vault/answer/6092995#time).",
          "type": "string"
        },
        "voiceOptions": {
          "$ref": "#/definitions/VoiceOptions",
          "description": "Set Voice search-specific options."
        }
      },
      "type": "object"
    },
    "RemoveHeldAccountsRequest": {
      "description": "Remove a list of accounts from a hold.",
      "properties": {
        "accountIds": {
          "description": "The account IDs of the accounts to remove from the hold.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RemoveHeldAccountsResponse": {
      "description": "Response for batch delete held accounts.",
      "properties": {
        "statuses": {
          "description": "A list of statuses for the deleted accounts. Results have the same order as the request.",
          "items": {
            "$ref": "#/definitions/Status"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RemoveMatterPermissionsRequest": {
      "description": "Remove an account as a matter collaborator.",
      "properties": {
        "accountId": {
          "description": "The account ID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReopenMatterRequest": {
      "description": "Reopen a matter by ID.",
      "properties": {},
      "type": "object"
    },
    "ReopenMatterResponse": {
      "description": "Response to a ReopenMatterRequest.",
      "properties": {
        "matter": {
          "$ref": "#/definitions/Matter",
          "description": "The updated matter, with state **OPEN**."
        }
      },
      "type": "object"
    },
    "SavedQuery": {
      "description": "The definition of a saved query. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "properties": {
        "createTime": {
          "description": "Output only. The server-generated timestamp when the saved query was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "displayName": {
          "description": "The name of the saved query.",
          "type": "string"
        },
        "matterId": {
          "description": "Output only. The matter ID of the matter the saved query is saved in. The server does not use this field during create and always uses matter ID in the URL.",
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Query",
          "description": "The search parameters of the saved query."
        },
        "savedQueryId": {
          "description": "A unique identifier for the saved query.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SharedDriveInfo": {
      "description": "The shared drives to search",
      "properties": {
        "sharedDriveIds": {
          "description": "A list of shared drive IDs, as provided by the [Drive API](https://developers.google.com/drive).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TeamDriveInfo": {
      "description": "Team Drives to search",
      "properties": {
        "teamDriveIds": {
          "description": "List of Team Drive IDs, as provided by the [Drive API](https://developers.google.com/drive).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UndeleteMatterRequest": {
      "description": "Undelete a matter by ID.",
      "properties": {},
      "type": "object"
    },
    "UserInfo": {
      "description": "User's information.",
      "properties": {
        "displayName": {
          "description": "The displayed name of the user.",
          "type": "string"
        },
        "email": {
          "description": "The email address of the user.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VoiceExportOptions": {
      "description": "The options for Voice exports.",
      "properties": {
        "exportFormat": {
          "description": "The file format for exported text messages.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "VoiceOptions": {
      "description": "Additional options for Voice search",
      "properties": {
        "coveredData": {
          "description": "Datatypes to search",
          "items": {
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "in": "query",
      "name": "$.xgafv",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "in": "query",
      "name": "access_token",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "in": "query",
      "name": "alt",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "in": "query",
      "name": "callback",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "in": "query",
      "name": "fields",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "in": "query",
      "name": "key",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "in": "query",
      "name": "oauth_token",
      "type": "string"
    },
    "prettyPrint": {
      "default": true,
      "description": "Returns response with indentations and line breaks.",
      "in": "query",
      "name": "prettyPrint",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "in": "query",
      "name": "quotaUser",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "in": "query",
      "name": "uploadType",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "in": "query",
      "name": "upload_protocol",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "Oauth2": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "description": "Oauth 2.0 implicit authentication",
      "flow": "implicit",
      "scopes": {
        "https://www.googleapis.com/auth/ediscovery": "Manage your eDiscovery data",
        "https://www.googleapis.com/auth/ediscovery.readonly": "View your eDiscovery data"
      },
      "type": "oauth2"
    },
    "Oauth2c": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "description": "Oauth 2.0 accessCode authentication",
      "flow": "accessCode",
      "scopes": {
        "https://www.googleapis.com/auth/ediscovery": "Manage your eDiscovery data",
        "https://www.googleapis.com/auth/ediscovery.readonly": "View your eDiscovery data"
      },
      "tokenUrl": "https://accounts.google.com/o/oauth2/token",
      "type": "oauth2"
    }
  },
  "tags": [
    {
      "name": "operations"
    },
    {
      "name": "matters"
    }
  ],
  "externalDocs": {
    "url": "https://developers.google.com/vault"
  }
}
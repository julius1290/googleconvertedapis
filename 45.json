{
  "swagger": "2.0",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "The Firebase Remote Config API lets developers change the behavior and appearance of their apps without requiring users to download an app update. It is an alternative to, but can be used in tandem with, the Firebase console at https://console.firebase.google.com.",
    "license": {
      "name": "Creative Commons Attribution 3.0",
      "url": "http://creativecommons.org/licenses/by/3.0/"
    },
    "termsOfService": "https://developers.google.com/terms/",
    "title": "Firebase Remote Config API",
    "version": "v1"
  },
  "host": "firebaseremoteconfig.googleapis.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/projects/{project}/namespaces/{namespace}:fetch": {
      "parameters": [
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/fields"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FetchRemoteConfigRequest"
            }
          },
          {
            "description": "Required. The Firebase project ID or project number. (NOTE: These identifiers can be retrieved from the Firebase console.)",
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. The string \"firebase\".",
            "in": "path",
            "name": "namespace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/FetchRemoteConfigResponse"
            }
          }
        },
        "tags": [
          "projects"
        ],
        "description": "Fetch parameter values and any Firebase A/B Testing experiment information for the calling device. An ETag header is also returned. Pass the ETag in future requests via the `If-None-Match` header to save bandwidth. NOTE: The Fetch REST API requires an Instance ID to be populated in the request. The Instance ID can obtained from the IID SDK. See https://firebase.google.com/docs/reference/android/com/google/firebase/iid/FirebaseInstanceId and https://firebase.google.com/docs/reference/ios/firebaseinstanceid/api/reference/Classes/FIRInstanceID",
        "operationId": "firebaseremoteconfig.projects.namespaces.fetch"
      }
    },
    "/v1/{+project}/remoteConfig": {
      "parameters": [
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/fields"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. The Firebase project's Project ID or Project Number, prefixed with \"projects/\".",
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional. Version number of the RemoteConfig to look up. If not specified, the latest RemoteConfig will be returned.",
            "in": "query",
            "name": "versionNumber",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RemoteConfig"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Get a project's Remote Config template and associated ETag header. Returns the requested RemoteConfig as the payload and an ETag as a response header.",
        "operationId": "firebaseremoteconfig.projects.getRemoteConfig"
      },
      "put": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RemoteConfig"
            }
          },
          {
            "description": "Required. The Firebase project's Project ID or Project Number, prefixed with \"projects/\".",
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional. Defaults to `false`. If `true`, the server will only attempt to validate the RemoteConfig. If validation succeeds, the RemoteConfig is not written to the Remote Config server, instead a `200 OK` response is returned. If validation fails, a validation error is returned. Note: other errors may still occur after this boolean is set to `false`, even if getting a `200 OK` when calling with UpdateRemoteConfig with `validate_only` set to `true`.",
            "in": "query",
            "name": "validateOnly",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RemoteConfig"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Publish a project's Remote Config template. Pass the ETag returned by GetRemoteConfig as an `If-Match` header to ensure the last seen Remote Config template is the one being overwritten by this update. Pass `If-Match: *` to force an update, regardless of the current version. Returns the published RemoteConfig and the updated ETag as a response header if successful, or an error. See the publishing guide for a list of [error codes](/docs/remote-config/use-config-rest#step_5_publish_json_data_to_replace_data_in_the_service).",
        "operationId": "firebaseremoteconfig.projects.updateRemoteConfig"
      }
    },
    "/v1/{+project}/remoteConfig:listVersions": {
      "parameters": [
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/fields"
        }
      ],
      "get": {
        "parameters": [
          {
            "description": "Required. The Firebase project's Project ID or Project Number, prefixed with \"projects/\".",
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional. Specify the latest update time to include in the results; any entries updated on or after this time are omitted.",
            "in": "query",
            "name": "endTime",
            "type": "string"
          },
          {
            "description": "Optional. Specify the newest version number to include in the results. If specified, must be greater than zero. Defaults to the newest version.",
            "in": "query",
            "name": "endVersionNumber",
            "type": "string"
          },
          {
            "description": "Optional. The maximum number of items to return per page.",
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          },
          {
            "description": "Optional. The next_page_token value returned from a previous List request, if any.",
            "in": "query",
            "name": "pageToken",
            "type": "string"
          },
          {
            "description": "Optional. Specify the earliest update time to include in the results; any entries updated before this time are omitted.",
            "in": "query",
            "name": "startTime",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListVersionsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Get a list of Remote Config template versions that have been published, sorted in reverse chronological order. Only the last 300 versions are stored. All versions that correspond to non-active Remote Config templates (i.e., all except the template that is being fetched by clients) are also deleted if they are older than 90 days.",
        "operationId": "firebaseremoteconfig.projects.remoteConfig.listVersions"
      }
    },
    "/v1/{+project}/remoteConfig:rollback": {
      "parameters": [
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/fields"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RollbackRemoteConfigRequest"
            }
          },
          {
            "description": "Required. The Firebase project's Project ID or Project Number, prefixed with \"projects/\".",
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RemoteConfig"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform"
            ],
            "Oauth2c": [
              "https://www.googleapis.com/auth/cloud-platform"
            ]
          }
        ],
        "tags": [
          "projects"
        ],
        "description": "Roll back a project's published Remote Config template to the one specified by the provided version number. A rollback is equivalent to getting a previously published Remote Config template, and re-publishing it using a force update. Returns the published RemoteConfig and the updated ETag as a response header if successful, or an error. See the publishing guide for a list of [error codes](/docs/remote-config/use-config-rest#step_5_publish_json_data_to_replace_data_in_the_service). In particular, note that the method returns an error with HTTP Status 404 if the requested version_number to rollback to is not found.",
        "operationId": "firebaseremoteconfig.projects.remoteConfig.rollback"
      }
    }
  },
  "definitions": {
    "ExperimentDescription": {
      "description": "Encapsulates per-experiment data.",
      "properties": {
        "experimentId": {
          "description": "The Firebase A/B Testing experiment ID. A string of max length 22 characters.",
          "type": "string"
        },
        "experimentStartTime": {
          "description": "When the experiment was started.",
          "format": "google-datetime",
          "type": "string"
        },
        "timeToLiveMillis": {
          "description": "How long the experiment can remain in ON state. Valid range from 1 ms to 6 months.",
          "format": "int64",
          "type": "string"
        },
        "triggerEvent": {
          "description": "The Google Analytics event that activates the experiment.",
          "type": "string"
        },
        "triggerTimeoutMillis": {
          "description": "How long the experiment can remain in STANDBY state. Valid range from 1 ms to 6 months.",
          "format": "int64",
          "type": "string"
        },
        "variantId": {
          "description": "The variant of the experiment assigned to the app instance.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FetchRemoteConfigRequest": {
      "description": "* A request to render parameter values from the current RemoteConfig template and Firebase A/B Testing experiments.",
      "properties": {
        "analyticsUserProperties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional - List of Analytics user properties.",
          "type": "object"
        },
        "appBuild": {
          "description": "Optional - If omitted and the template has any conditions that depend on app_build, they will be evaluated as false. * On Android, this is the Version Code, which is a positive integer, e.g., 42. * On iOS, this is the CFBundleVersion, which is a string comprised of three non-negative, period-separated integers with the first integer being greater than zero—for example, 3.1.2. * On Web, the concept of a build number is not well defined, and thus should not be set.",
          "type": "string"
        },
        "appId": {
          "description": "Required. If not specified, fetch will return 400 (Bad Request). GMP App id.",
          "type": "string"
        },
        "appInstanceId": {
          "description": "Required. The instance id of the app. If unspecified, fetch will return 400 (Bad Request). Refer to https://firebase.google.com/support/privacy/manage-iids.",
          "type": "string"
        },
        "appInstanceIdToken": {
          "description": "Required. The instance id token of the app, which is retrieved using the default scope. If specified incorrectly, and if the template has any percentile conditions, they will be evaluated to false. If omitted, fetch can lead to a 400 response code (Bad Request).",
          "type": "string"
        },
        "appVersion": {
          "description": "Optional - If omitted and the template has any conditions that depend on app_version, they will be evaluated as false. App version, using the native app version format on the client's OS. Examples: 0, 123, 0123, 1.2.3, 001.33.043.321.55 .",
          "type": "string"
        },
        "countryCode": {
          "description": "Optional - If omitted and the template has any conditions that depend on country_code, they will be evaluated as false. Should be 2 lower-case letters, e.g. \"us\", \"tr\", or \"gb\", as defined in ISO 3166-1 alpha-2. This is case-insensitive. See https://www.iso.org/obp/ui/#search .",
          "type": "string"
        },
        "languageCode": {
          "description": "Optional - If omitted and the template has any conditions that depend on locale, they will be evaluated as false. The default locale of the device, in BCP47 format, for example \"en-US\". This is case-insensitive. See https://www.w3.org/International/core/langtags/rfc3066bis.html .",
          "type": "string"
        },
        "packageName": {
          "description": "Optional - If omitted, the project's default package will be fetched. Name of the package for which we are fetching data from. Should match the app name for Android apps, or the corresponding entity (e.g. bundle name) for iOS apps.",
          "type": "string"
        },
        "platformVersion": {
          "description": "Optional - If omitted and the template has any conditions that depend on platform version, they will be evaluated as false. The version string of the device, e.g. \"21\" for (Android) Lollipop, or (for iOS) three non-negative, period separated integers, e.g. \"9.0.0\".",
          "type": "string"
        },
        "sdkVersion": {
          "description": "Optional - Version of the Firebase Remote Config SDK. This number is hard-coded into each client.",
          "type": "string"
        },
        "timeZone": {
          "description": "Optional - If omitted and the template has any conditions that depend on timezone, they will be evaluated as false. The timezone id of the device, in Olson Id format, e.g. \"America/Los_Angeles\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FetchRemoteConfigResponse": {
      "description": "* The Firebase Remote Config configuration data for an app instance.",
      "properties": {
        "appName": {
          "description": "For Android apps, app_name is the package name of the app. For iOS apps, it is the bundle name.",
          "type": "string"
        },
        "entries": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The Key-Value pairs of the config.",
          "type": "object"
        },
        "experimentDescriptions": {
          "description": "Firebase A/B Testing experiment configuration and metadata.",
          "items": {
            "$ref": "#/definitions/ExperimentDescription"
          },
          "type": "array"
        },
        "personalizationMetadata": {
          "additionalProperties": {
            "$ref": "#/definitions/PersonalizationMetadata"
          },
          "description": "A map of Remote Config parameter key to Firebase Personalization related metadata that should be delivered to the particular device making the fetch call.",
          "type": "object"
        },
        "state": {
          "description": "The state of the fetched response.",
          "enum": [
            "INSTANCE_STATE_UNSPECIFIED",
            "UPDATE",
            "NO_TEMPLATE",
            "NO_CHANGE",
            "EMPTY_CONFIG"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListVersionsResponse": {
      "description": "Contains a paginated list of versions of the RemoteConfig.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "versions": {
          "description": "A list of version metadata objects, sorted in reverse chronological order.",
          "items": {
            "$ref": "#/definitions/Version"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PersonalizationMetadata": {
      "description": "LINT.IfChange Metadata associated with a particular Remote Config parameter key, managed by Firebase Personalization.",
      "properties": {
        "armIndex": {
          "description": "The selected arm's index, which may be 0.",
          "format": "int32",
          "type": "integer"
        },
        "choiceId": {
          "description": "Identifier for the choice. For internal use only.",
          "type": "string"
        },
        "group": {
          "description": "Variant group to which user belongs.",
          "enum": [
            "GROUP_UNSPECIFIED",
            "BASELINE",
            "P13N"
          ],
          "type": "string"
        },
        "personalizationId": {
          "description": "The ID of this Personalization experiment. Should be composed of letters, numbers, hyphens, and underscores.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PersonalizationValue": {
      "description": "Contains the necessary information to fetch a personalized value.",
      "properties": {
        "personalizationId": {
          "description": "Identifier that represents a personalization definition. This definition is used to resolve the value at config fetch time.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RemoteConfig": {
      "description": "A RemoteConfig represents a Remote Config template. A project's Remote Config template is evaluated during each application instance's fetch. The resolved value of a parameter is determined as follows: Given the conditional values that refer to `true` conditions for the application instance, the parameter's resolved value is the conditional value whose name is the earliest in the conditions list. Else, if the parameter has a default value, the resolved value is set to the default value. Else, the parameter has no value and is omitted from the result that the application instance fetches. For example, assume we have parameter key `fruit`, with default value `pear` and conditional value submap `{\"is_ios\": \"apple\", \"is_in_20_percent\": \"banana\"}` where `\"is_ios\"` and `\"is_20_percent\"` are names of conditions in the ordered condition list. The value of `fruit` would evaluate to `apple` if `is_ios` is true. Otherwise, if `is_in_20_percent` is `true`, `fruit` would evaluate to `banana`, and if `is_ios` and `is_in_20_percent` are both false, `fruit` would evaluate to `pear`. If no default value were specified, and `is_ios` and `is_in_20_percent` were both false, no value for `fruit` would be returned from the Remote Config server to the client. Once a project's Remote Config template has been published via a successful UpdateRemoteConfig call, clients can fetch these parameter values and display them to users.",
      "properties": {
        "parameters": {
          "additionalProperties": {
            "$ref": "#/definitions/RemoteConfigParameter"
          },
          "description": "Map of parameter keys to their optional default values and optional conditional values.",
          "type": "object"
        },
        "conditions": {
          "description": "A list of conditions in descending order by priority. The values of the google.firebase.remoteconfig.v1.RemoteConfigCondition.name entries must be unique.",
          "items": {
            "$ref": "#/definitions/RemoteConfigCondition"
          },
          "type": "array"
        },
        "parameterGroups": {
          "additionalProperties": {
            "$ref": "#/definitions/RemoteConfigParameterGroup"
          },
          "description": "Map of parameter group names to their descriptions and grouped parameters. A group's name is mutable but must be unique among groups in the config. The name is limited to 256 characters and intended to be human-readable. Any Unicode characters are allowed. Groups have a list of parameters which allows users of the API to group parameters that are associated with the same feature or theme together for easy organizational access. For example, a parameter group with the name \"Search V2\" may have the `description` \"New mobile search view\" and contain parameters for the new search's layout and font.",
          "type": "object"
        },
        "version": {
          "$ref": "#/definitions/Version",
          "description": "Output only, except for the version description. Metadata associated with a particular version of a template. A version's description field may be specified in UpdateRemoteConfig calls."
        }
      },
      "type": "object"
    },
    "RemoteConfigCondition": {
      "description": "A condition targeting a specific group of users. A list of these conditions make up part of a RemoteConfig object.",
      "properties": {
        "expression": {
          "description": "Required. The logic of this condition. See the documentation regarding [Condition Expressions](/docs/remote-config/condition-reference) for the expected syntax of this field.",
          "type": "string"
        },
        "name": {
          "description": "Required. A non-empty and unique name of this condition.",
          "type": "string"
        },
        "tagColor": {
          "description": "Optional. The color associated with this condition for display purposes in the Firebase Console. Not specifying this value or having \"CONDITION_DISPLAY_COLOR_UNSPECIFIED\" results in the Console picking an arbitrary color to associate with the condition.",
          "enum": [
            "CONDITION_DISPLAY_COLOR_UNSPECIFIED",
            "BLUE",
            "BROWN",
            "CYAN",
            "DEEP_ORANGE",
            "GREEN",
            "INDIGO",
            "LIME",
            "ORANGE",
            "PINK",
            "PURPLE",
            "TEAL"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RemoteConfigParameter": {
      "description": "A parameter value associated with a parameter key in google.firebase.remoteconfig.v1.RemoteConfig.parameters. At minimum, a `default_value` or a `conditional_values` entry should be present for the parameter to have any effect.",
      "properties": {
        "conditionalValues": {
          "additionalProperties": {
            "$ref": "#/definitions/RemoteConfigParameterValue"
          },
          "description": "Optional - a (condition name, value) map. The condition_name of the highest priority (the one listed first in the RemoteConfig's conditions list) determines the value of this parameter.",
          "type": "object"
        },
        "defaultValue": {
          "$ref": "#/definitions/RemoteConfigParameterValue",
          "description": "Optional - value to set the parameter to, when none of the named conditions evaluate to `true`."
        },
        "description": {
          "description": "Optional. A description for this Parameter. Its length must be less than or equal to 256 characters . A description may contain any Unicode characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RemoteConfigParameterGroup": {
      "description": "A named group of parameters. Grouping parameters is only for management purposes and does not affect client-side fetching of parameter values.",
      "properties": {
        "parameters": {
          "additionalProperties": {
            "$ref": "#/definitions/RemoteConfigParameter"
          },
          "description": "Map of parameter keys to their optional default values and optional conditional values for parameters that belong to this group. A parameter only appears once per RemoteConfig: an ungrouped parameter appears at the top level; a parameter organized within a group appears within its group's map of parameters.",
          "type": "object"
        },
        "description": {
          "description": "Optional. A description for the group. Its length must be less than or equal to 256 characters. A description may contain any Unicode characters.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RemoteConfigParameterValue": {
      "description": "A RemoteConfigParameterValue resource contains the value that a parameter may have.",
      "properties": {
        "personalizationValue": {
          "$ref": "#/definitions/PersonalizationValue",
          "description": "A dynamic, user-specific value computed when config is fetched."
        },
        "useInAppDefault": {
          "description": "If true, the parameter is omitted from the parameter values returned to a client.",
          "type": "boolean"
        },
        "value": {
          "description": "The string value that the parameter is set to.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RemoteConfigUser": {
      "description": "All the fields associated with the person/service account that wrote a Remote Config template.",
      "properties": {
        "email": {
          "description": "Output only. Email address.",
          "type": "string"
        },
        "imageUrl": {
          "description": "Output only. Image URL.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Display name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RollbackRemoteConfigRequest": {
      "description": "Replace the published Remote Config template with an earlier version.",
      "properties": {
        "versionNumber": {
          "description": "Required. The version number of the RemoteConfig to roll back to. The specified version number must be less than the current version number, and not have been deleted due to staleness.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Version": {
      "description": "Contains all metadata about a particular version of the Remote Config template. All fields are set at the time the specified Remote Config template was written.",
      "properties": {
        "description": {
          "description": "Optional. The user-provided description of the corresponding Remote Config template",
          "type": "string"
        },
        "isLegacy": {
          "description": "Output only. `True` if this Remote Config template was published before version history was supported.",
          "type": "boolean"
        },
        "rollbackSource": {
          "description": "Output only. Only present if this version is the result of a rollback, and will be the version number of the Remote Config template that was rolled-back to.",
          "format": "int64",
          "type": "string"
        },
        "updateOrigin": {
          "description": "Output only. Where the update action originated.",
          "enum": [
            "REMOTE_CONFIG_UPDATE_ORIGIN_UNSPECIFIED",
            "CONSOLE",
            "REST_API",
            "ADMIN_SDK_NODE"
          ],
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. When the Remote Config template was written to the Remote Config server.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateType": {
          "description": "Output only. What type of update was made.",
          "enum": [
            "REMOTE_CONFIG_UPDATE_TYPE_UNSPECIFIED",
            "INCREMENTAL_UPDATE",
            "FORCED_UPDATE",
            "ROLLBACK"
          ],
          "type": "string"
        },
        "updateUser": {
          "$ref": "#/definitions/RemoteConfigUser",
          "description": "Output only. Aggregation of all metadata fields about the account that performed the update."
        },
        "versionNumber": {
          "description": "Output only. The version number of the version's corresponding Remote Config template.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "in": "query",
      "name": "$.xgafv",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "in": "query",
      "name": "access_token",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "in": "query",
      "name": "alt",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "in": "query",
      "name": "callback",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "in": "query",
      "name": "fields",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "in": "query",
      "name": "key",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "in": "query",
      "name": "oauth_token",
      "type": "string"
    },
    "prettyPrint": {
      "default": true,
      "description": "Returns response with indentations and line breaks.",
      "in": "query",
      "name": "prettyPrint",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "in": "query",
      "name": "quotaUser",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "in": "query",
      "name": "uploadType",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "in": "query",
      "name": "upload_protocol",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "Oauth2": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "description": "Oauth 2.0 implicit authentication",
      "flow": "implicit",
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": "See, edit, configure, and delete your Google Cloud Platform data"
      },
      "type": "oauth2"
    },
    "Oauth2c": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "description": "Oauth 2.0 accessCode authentication",
      "flow": "accessCode",
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": "See, edit, configure, and delete your Google Cloud Platform data"
      },
      "tokenUrl": "https://accounts.google.com/o/oauth2/token",
      "type": "oauth2"
    }
  },
  "tags": [
    {
      "name": "projects"
    }
  ],
  "externalDocs": {
    "url": "https://firebase.google.com/docs/remote-config/use-config-rest"
  }
}